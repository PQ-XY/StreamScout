name: CI/CD for StreamScout WAR App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set up Java 21
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Build React frontend
      run: |
        cd frontend
        npm install
        npm run build

    - name: Inject frontend into backend webapp
      run: |
        rm -rf backend/src/main/webapp/*
        cp -r frontend/build/* backend/src/main/webapp/

    - name: Build backend WAR
      run: |
        cd backend
        mvn clean install

    - name: Rename WAR to jupiter.war
      run: |
        cp backend/target/jupiter-1.0-SNAPSHOT.war jupiter.war

    - name: Confirm files before SCP
      run: |
        echo "Root directory:"
        ls -lh
        echo "Backend target directory:"
        ls -lh backend/target

    - name: Validate SSH key
      run: |
        if [ -z "${{ secrets.EC2_SSH_KEY }}" ]; then
          echo "‚ùå Error: EC2_SSH_KEY is not set."
          exit 1
        fi

    - name: Copy WAR and Dockerfile to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_SSH_PORT }}
        source: |
          ./jupiter.war
          ./Dockerfile
        target: ~/streamscout

    - name: SSH into EC2 and deploy container
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: ${{ secrets.EC2_SSH_PORT }}
        script: |
          cd ~/streamscout
          docker stop streamscout || true
          docker rm streamscout || true
          docker build -t streamscout .
          docker run -d -p 80:8080 --name streamscout streamscout



