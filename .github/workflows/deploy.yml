name: Build and Deploy to AWS EC2

on:
  push:
    branches:
      - main   # Or your deployment branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # If you have backend and frontend, build both accordingly
      # Example: Build React frontend
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm install

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

      # Example: Build Java backend
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build Backend
        working-directory: ./backend
        run: ./mvnw clean package   # or your build command

      - name: Prepare Deployment Artifact
        run: |
              mkdir -p deploy
              echo "Listing backend/target contents:"
              ls -la backend/target
              echo "Listing frontend/build contents:"
              ls -la frontend/build

              cp backend/target/*.war deploy/app.war
              cp -r frontend/build deploy/frontend_build

      - name: Zip Deployment Artifact
        run: zip -r deploy.zip deploy

      - name: Upload Artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: deploy-zip
          path: deploy.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: deploy-zip
          path: deploy

      - name: Deploy to AWS CodeDeploy
        uses: aws-actions/aws-code-deploy@v1
        with:
          application-name: StreamScoutApp
          deployment-group: StreamScoutGroup
          deployment-description: 'GitHub Actions deployment'
          region: us-east-2
          bundle-location: deploy/deploy.zip
          wait-until-deployed: true

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
